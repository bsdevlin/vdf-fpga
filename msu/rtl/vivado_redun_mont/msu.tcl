#*****************************************************************************************
# Vivado (TM) v2018.3 (64-bit)
#
# msu.tcl: Tcl script for re-creating project 'msu'
#
# Generated by Vivado on Thu Jul 25 21:12:36 EDT 2019
# IP Build 2404404 on Fri Dec  7 01:43:56 MST 2018
#
# This file contains the Vivado Tcl commands for re-creating the project to the state*
# when this script was generated. In order to re-create the project, please source this
# file in the Vivado Tcl Shell.
#
# * Note that the runs in the created project will be configured the same way as the
#   original project, however they will not be launched automatically. To regenerate the
#   run results please launch the synthesis/implementation runs as needed.
#
#*****************************************************************************************
# NOTE: In order to use this script for source control purposes, please make sure that the
#       following files are added to the source control system:-
#
# 1. This project restoration tcl script (msu.tcl) that was generated.
#
# 2. The following source(s) files that were local or imported into the original project.
#    (Please see the '$orig_proj_dir' and '$origin_dir' variable setting below at the start of the script)
#
#    "/home/snpeffer/src/vdf/fpga_comp/vdf-fpga-dev2/msu/rtl/vivado_ozturk/msu.srcs/msuconfig.vh"
#    "/home/snpeffer/src/vdf/fpga_comp/vdf-fpga-dev2/msu/rtl/vivado_ozturk/msu.srcs/mem/reduction_lut.sv"
#    "/home/snpeffer/src/vdf/fpga_comp/vdf-fpga-dev2/msu/rtl/vivado_ozturk/msu.srcs/mem/reduction_lut_020.dat"
#    "/home/snpeffer/src/vdf/fpga_comp/vdf-fpga-dev2/msu/rtl/vivado_ozturk/msu.srcs/mem/reduction_lut_012.dat"
#    "/home/snpeffer/src/vdf/fpga_comp/vdf-fpga-dev2/msu/rtl/vivado_ozturk/msu.srcs/mem/reduction_lut_004.dat"
#    "/home/snpeffer/src/vdf/fpga_comp/vdf-fpga-dev2/msu/rtl/vivado_ozturk/msu.srcs/mem/reduction_lut_017.dat"
#    "/home/snpeffer/src/vdf/fpga_comp/vdf-fpga-dev2/msu/rtl/vivado_ozturk/msu.srcs/mem/reduction_lut_009.dat"
#    "/home/snpeffer/src/vdf/fpga_comp/vdf-fpga-dev2/msu/rtl/vivado_ozturk/msu.srcs/mem/reduction_lut_033.dat"
#    "/home/snpeffer/src/vdf/fpga_comp/vdf-fpga-dev2/msu/rtl/vivado_ozturk/msu.srcs/mem/reduction_lut_024.dat"
#    "/home/snpeffer/src/vdf/fpga_comp/vdf-fpga-dev2/msu/rtl/vivado_ozturk/msu.srcs/mem/reduction_lut_026.dat"
#    "/home/snpeffer/src/vdf/fpga_comp/vdf-fpga-dev2/msu/rtl/vivado_ozturk/msu.srcs/mem/reduction_lut_011.dat"
#    "/home/snpeffer/src/vdf/fpga_comp/vdf-fpga-dev2/msu/rtl/vivado_ozturk/msu.srcs/mem/reduction_lut_000.dat"
#    "/home/snpeffer/src/vdf/fpga_comp/vdf-fpga-dev2/msu/rtl/vivado_ozturk/msu.srcs/mem/reduction_lut_029.dat"
#    "/home/snpeffer/src/vdf/fpga_comp/vdf-fpga-dev2/msu/rtl/vivado_ozturk/msu.srcs/mem/reduction_lut_013.dat"
#    "/home/snpeffer/src/vdf/fpga_comp/vdf-fpga-dev2/msu/rtl/vivado_ozturk/msu.srcs/mem/reduction_lut_030.dat"
#    "/home/snpeffer/src/vdf/fpga_comp/vdf-fpga-dev2/msu/rtl/vivado_ozturk/msu.srcs/mem/reduction_lut_007.dat"
#    "/home/snpeffer/src/vdf/fpga_comp/vdf-fpga-dev2/msu/rtl/vivado_ozturk/msu.srcs/mem/reduction_lut_034.dat"
#    "/home/snpeffer/src/vdf/fpga_comp/vdf-fpga-dev2/msu/rtl/vivado_ozturk/msu.srcs/mem/reduction_lut_008.dat"
#    "/home/snpeffer/src/vdf/fpga_comp/vdf-fpga-dev2/msu/rtl/vivado_ozturk/msu.srcs/mem/reduction_lut_016.dat"
#    "/home/snpeffer/src/vdf/fpga_comp/vdf-fpga-dev2/msu/rtl/vivado_ozturk/msu.srcs/mem/reduction_lut_021.dat"
#    "/home/snpeffer/src/vdf/fpga_comp/vdf-fpga-dev2/msu/rtl/vivado_ozturk/msu.srcs/mem/reduction_lut_003.dat"
#    "/home/snpeffer/src/vdf/fpga_comp/vdf-fpga-dev2/msu/rtl/vivado_ozturk/msu.srcs/mem/reduction_lut_025.dat"
#    "/home/snpeffer/src/vdf/fpga_comp/vdf-fpga-dev2/msu/rtl/vivado_ozturk/msu.srcs/mem/reduction_lut_001.dat"
#    "/home/snpeffer/src/vdf/fpga_comp/vdf-fpga-dev2/msu/rtl/vivado_ozturk/msu.srcs/mem/reduction_lut_006.dat"
#    "/home/snpeffer/src/vdf/fpga_comp/vdf-fpga-dev2/msu/rtl/vivado_ozturk/msu.srcs/mem/reduction_lut_031.dat"
#    "/home/snpeffer/src/vdf/fpga_comp/vdf-fpga-dev2/msu/rtl/vivado_ozturk/msu.srcs/mem/reduction_lut_019.dat"
#    "/home/snpeffer/src/vdf/fpga_comp/vdf-fpga-dev2/msu/rtl/vivado_ozturk/msu.srcs/mem/reduction_lut_028.dat"
#    "/home/snpeffer/src/vdf/fpga_comp/vdf-fpga-dev2/msu/rtl/vivado_ozturk/msu.srcs/mem/reduction_lut_022.dat"
#    "/home/snpeffer/src/vdf/fpga_comp/vdf-fpga-dev2/msu/rtl/vivado_ozturk/msu.srcs/mem/reduction_lut_015.dat"
#    "/home/snpeffer/src/vdf/fpga_comp/vdf-fpga-dev2/msu/rtl/vivado_ozturk/msu.srcs/mem/reduction_lut_035.dat"
#    "/home/snpeffer/src/vdf/fpga_comp/vdf-fpga-dev2/msu/rtl/vivado_ozturk/msu.srcs/mem/reduction_lut_018.dat"
#    "/home/snpeffer/src/vdf/fpga_comp/vdf-fpga-dev2/msu/rtl/vivado_ozturk/msu.srcs/mem/reduction_lut_005.dat"
#    "/home/snpeffer/src/vdf/fpga_comp/vdf-fpga-dev2/msu/rtl/vivado_ozturk/msu.srcs/mem/reduction_lut_002.dat"
#    "/home/snpeffer/src/vdf/fpga_comp/vdf-fpga-dev2/msu/rtl/vivado_ozturk/msu.srcs/mem/reduction_lut_032.dat"
#    "/home/snpeffer/src/vdf/fpga_comp/vdf-fpga-dev2/msu/rtl/vivado_ozturk/msu.srcs/mem/reduction_lut_014.dat"
#    "/home/snpeffer/src/vdf/fpga_comp/vdf-fpga-dev2/msu/rtl/vivado_ozturk/msu.srcs/mem/reduction_lut_027.dat"
#    "/home/snpeffer/src/vdf/fpga_comp/vdf-fpga-dev2/msu/rtl/vivado_ozturk/msu.srcs/mem/reduction_lut_010.dat"
#    "/home/snpeffer/src/vdf/fpga_comp/vdf-fpga-dev2/msu/rtl/vivado_ozturk/msu.srcs/mem/reduction_lut_023.dat"
#    "/home/snpeffer/src/vdf/fpga_comp/vdf-fpga-dev2/msu/rtl/vivado_ozturk/msu.srcs/constrs_1/new/user.xdc"
#    "/home/snpeffer/src/vdf/fpga_comp/vdf-fpga-dev2/msu/rtl/vivado_ozturk/msu.srcs/tb.sv"
#    "/home/snpeffer/src/vdf/fpga_comp/vdf-fpga-dev2/msu/rtl/vivado_ozturk/tb_behav.wcfg"
#
# 3. The following remote source files that were added to the original project:-
#
#    "/home/snpeffer/src/vdf/fpga_comp/vdf-fpga-dev2/msu/rtl/sdaccel/vdf_control_s_axi.v"
#    "/home/snpeffer/src/vdf/fpga_comp/vdf-fpga-dev2/primitives/rtl/carry_save_adder.sv"
#    "/home/snpeffer/src/vdf/fpga_comp/vdf-fpga-dev2/primitives/rtl/carry_save_adder_tree_level.sv"
#    "/home/snpeffer/src/vdf/fpga_comp/vdf-fpga-dev2/primitives/rtl/compressor_tree_3_to_2.sv"
#    "/home/snpeffer/src/vdf/fpga_comp/vdf-fpga-dev2/primitives/rtl/full_adder.sv"
#    "/home/snpeffer/src/vdf/fpga_comp/vdf-fpga-dev2/modular_square/rtl/modular_square_8_cycles.sv"
#    "/home/snpeffer/src/vdf/fpga_comp/vdf-fpga-dev2/msu/rtl/modular_square_wrapper.sv"
#    "/home/snpeffer/src/vdf/fpga_comp/vdf-fpga-dev2/msu/rtl/msu.sv"
#    "/home/snpeffer/src/vdf/fpga_comp/vdf-fpga-dev2/primitives/rtl/multiplier.sv"
#    "/home/snpeffer/src/vdf/fpga_comp/vdf-fpga-dev2/primitives/rtl/multiply.sv"
#    "/home/snpeffer/src/vdf/fpga_comp/vdf-fpga-dev2/msu/rtl/sdaccel/vdf_axi_read_master.sv"
#    "/home/snpeffer/src/vdf/fpga_comp/vdf-fpga-dev2/msu/rtl/sdaccel/vdf_axi_write_master.sv"
#    "/home/snpeffer/src/vdf/fpga_comp/vdf-fpga-dev2/msu/rtl/sdaccel/vdf_counter.sv"
#    "/home/snpeffer/src/vdf/fpga_comp/vdf-fpga-dev2/msu/rtl/sdaccel/vdf_kernel.sv"
#    "/home/snpeffer/src/vdf/fpga_comp/vdf-fpga-dev2/msu/rtl/sdaccel/vdf_wrapper.sv"
#    "/home/snpeffer/src/vdf/fpga_comp/vdf-fpga-dev2/msu/rtl/sdaccel/vdf.v"
#
#*****************************************************************************************

# Set the reference directory for source file relative paths (by default the value is script directory path)
set origin_dir "."

# Use origin directory path location variable, if specified in the tcl shell
if { [info exists ::origin_dir_loc] } {
  set origin_dir $::origin_dir_loc
}

# Set the project name
set _xil_proj_name_ "msu"

# Use project name variable, if specified in the tcl shell
if { [info exists ::user_project_name] } {
  set _xil_proj_name_ $::user_project_name
}

variable script_file
set script_file "msu.tcl"

# Help information for this script
proc print_help {} {
  variable script_file
  puts "\nDescription:"
  puts "Recreate a Vivado project from this script. The created project will be"
  puts "functionally equivalent to the original project for which this script was"
  puts "generated. The script contains commands for creating a project, filesets,"
  puts "runs, adding/importing sources and setting properties on various objects.\n"
  puts "Syntax:"
  puts "$script_file"
  puts "$script_file -tclargs \[--origin_dir <path>\]"
  puts "$script_file -tclargs \[--project_name <name>\]"
  puts "$script_file -tclargs \[--help\]\n"
  puts "Usage:"
  puts "Name                   Description"
  puts "-------------------------------------------------------------------------"
  puts "\[--origin_dir <path>\]  Determine source file paths wrt this path. Default"
  puts "                       origin_dir path value is \".\", otherwise, the value"
  puts "                       that was set with the \"-paths_relative_to\" switch"
  puts "                       when this script was generated.\n"
  puts "\[--project_name <name>\] Create project with the specified name. Default"
  puts "                       name is the name of the project from where this"
  puts "                       script was generated.\n"
  puts "\[--help\]               Print help information for this script"
  puts "-------------------------------------------------------------------------\n"
  exit 0
}

if { $::argc > 0 } {
  for {set i 0} {$i < $::argc} {incr i} {
    set option [string trim [lindex $::argv $i]]
    switch -regexp -- $option {
      "--origin_dir"   { incr i; set origin_dir [lindex $::argv $i] }
      "--project_name" { incr i; set _xil_proj_name_ [lindex $::argv $i] }
      "--help"         { print_help }
      default {
        if { [regexp {^-} $option] } {
          puts "ERROR: Unknown option '$option' specified, please type '$script_file -tclargs --help' for usage info.\n"
          return 1
        }
      }
    }
  }
}

# Set the directory path for the original project from where this script was exported
set orig_proj_dir "[file normalize "$origin_dir/"]"

# Create project
create_project ${_xil_proj_name_} ./${_xil_proj_name_} -part xcvu9p-flga2104-2L-e

# Set the directory path for the new project
set proj_dir [get_property directory [current_project]]

# Set project properties
set obj [current_project]
set_property -name "board_part_repo_paths" -value "/home/snpeffer/src/vdf/artya7/vivado-boards-master/new/board_files" -objects $obj
set_property -name "default_lib" -value "xil_defaultlib" -objects $obj
set_property -name "dsa.accelerator_binary_content" -value "bitstream" -objects $obj
set_property -name "dsa.accelerator_binary_format" -value "xclbin2" -objects $obj
set_property -name "dsa.board_id" -value "vcu118" -objects $obj
set_property -name "dsa.description" -value "Vivado generated DSA" -objects $obj
set_property -name "dsa.dr_bd_base_address" -value "0" -objects $obj
set_property -name "dsa.emu_dir" -value "emu" -objects $obj
set_property -name "dsa.flash_interface_type" -value "bpix16" -objects $obj
set_property -name "dsa.flash_offset_address" -value "0" -objects $obj
set_property -name "dsa.flash_size" -value "1024" -objects $obj
set_property -name "dsa.host_architecture" -value "x86_64" -objects $obj
set_property -name "dsa.host_interface" -value "pcie" -objects $obj
set_property -name "dsa.num_compute_units" -value "60" -objects $obj
set_property -name "dsa.platform_state" -value "pre_synth" -objects $obj
set_property -name "dsa.vendor" -value "xilinx" -objects $obj
set_property -name "dsa.version" -value "0.0" -objects $obj
set_property -name "enable_vhdl_2008" -value "1" -objects $obj
set_property -name "ip_cache_permissions" -value "read write" -objects $obj
set_property -name "ip_output_repo" -value "$proj_dir/${_xil_proj_name_}.cache/ip" -objects $obj
set_property -name "mem.enable_memory_map_generation" -value "1" -objects $obj
set_property -name "part" -value "xcvu9p-flga2104-2L-e" -objects $obj
set_property -name "sim.central_dir" -value "$proj_dir/${_xil_proj_name_}.ip_user_files" -objects $obj
set_property -name "sim.ip.auto_export_scripts" -value "1" -objects $obj
set_property -name "simulator_language" -value "Mixed" -objects $obj
set_property -name "webtalk.xsim_launch_sim" -value "33" -objects $obj

# Create 'sources_1' fileset (if not found)
if {[string equal [get_filesets -quiet sources_1] ""]} {
  create_fileset -srcset sources_1
}

# Set 'sources_1' fileset object
set obj [get_filesets sources_1]
set files [list \
 [file normalize "${origin_dir}/../sdaccel/vdf_control_s_axi.v"] \
 [file normalize "${origin_dir}/../../../primitives/rtl/carry_save_adder.sv"] \
 [file normalize "${origin_dir}/../../../primitives/rtl/carry_save_adder_tree_level.sv"] \
 [file normalize "${origin_dir}/../../../primitives/rtl/compressor_tree_3_to_2.sv"] \
 [file normalize "${origin_dir}/../../../primitives/rtl/full_adder.sv"] \
 [file normalize "${origin_dir}/../../../primitives/rtl/adder_tree.sv"] \
 [file normalize "${origin_dir}/../../../primitives/rtl/carry_save_adder_tree_level.sv"] \
 [file normalize "${origin_dir}/../../../primitives/rtl/compressor_6_to_3_C2_bit.sv"] \
 [file normalize "${origin_dir}/../../../primitives/rtl/compressor_6_to_3_C4_bit.sv"] \
 [file normalize "${origin_dir}/../../../primitives/rtl/compressor_6_to_3_S_bit.sv"] \
 [file normalize "${origin_dir}/../../../primitives/rtl/compressor_6_to_3.sv"] \
 [file normalize "${origin_dir}/../../../primitives/rtl/compressor_tree_6_to_3_then_3_to_2.sv"] \
 [file normalize "${origin_dir}/../../../primitives/rtl/faster_carry_save_adder_tree_level.sv"] \
 [file normalize "${origin_dir}/../msu.sv"] \
 [file normalize "${origin_dir}/../../../primitives/rtl/multiplier.sv"] \
 [file normalize "${origin_dir}/../../../primitives/rtl/multiply.sv"] \
 [file normalize "${origin_dir}/../sdaccel/vdf_axi_read_master.sv"] \
 [file normalize "${origin_dir}/../sdaccel/vdf_axi_write_master.sv"] \
 [file normalize "${origin_dir}/../sdaccel/vdf_counter.sv"] \
 [file normalize "${origin_dir}/../sdaccel/vdf_kernel.sv"] \
 [file normalize "${origin_dir}/../sdaccel/vdf_wrapper.sv"] \
 [file normalize "${origin_dir}/../sdaccel/vdf.v"] \
 [file normalize "${origin_dir}/../../../redun_mont/src/common_if.sv"] \
 [file normalize "${origin_dir}/../../../redun_mont/src/common_pkg.sv"] \
 [file normalize "${origin_dir}/../../../redun_mont/src/redun_mont_pkg.sv"] \
 [file normalize "${origin_dir}/../../../redun_mont/src/multi_mode_multiplier.sv"] \
 [file normalize "${origin_dir}/../../../redun_mont/src/redun_mont_wrapper.sv"] \
 [file normalize "${origin_dir}/../../../redun_mont/src/redun_mont.sv"] \
 [file normalize "${origin_dir}/../../../redun_mont/ip/clk_wiz/clk_wiz_0.xci"] \
 [file normalize "${origin_dir}/../../../redun_mont/ip/fifo_generator_32/fifo_generator_32.xci"] \
 [file normalize "${origin_dir}/../../../redun_mont/ip/fifo_generator_16/fifo_generator_16.xci"] \
]
add_files -norecurse -fileset $obj $files

# Add local files from the original project (-no_copy_sources specified)
set files [list \
 [file normalize "${origin_dir}/msu.srcs/msuconfig.vh" ]\
]
set added_files [add_files -fileset sources_1 $files]

# Set 'sources_1' fileset file properties for remote files
set file "$origin_dir/../../../primitives/rtl/carry_save_adder.sv"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "$origin_dir/../../../primitives/rtl/carry_save_adder_tree_level.sv"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "$origin_dir/../../../primitives/rtl/compressor_tree_3_to_2.sv"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "$origin_dir/../../../primitives/rtl/full_adder.sv"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "$origin_dir/../../../modular_square/rtl/modular_square_8_cycles.sv"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "$origin_dir/../modular_square_wrapper.sv"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "$origin_dir/../msu.sv"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "$origin_dir/../../../primitives/rtl/multiplier.sv"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "$origin_dir/../../../primitives/rtl/multiply.sv"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "$origin_dir/../sdaccel/vdf_axi_read_master.sv"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "$origin_dir/../sdaccel/vdf_axi_write_master.sv"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "$origin_dir/../sdaccel/vdf_counter.sv"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "$origin_dir/../sdaccel/vdf_kernel.sv"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "$origin_dir/../sdaccel/vdf_wrapper.sv"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj


# Set 'sources_1' fileset file properties for local files
set file "msu.srcs/msuconfig.vh"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "Verilog Header" -objects $file_obj


# Set 'sources_1' fileset properties
set obj [get_filesets sources_1]
set_property -name "top" -value "vdf" -objects $obj
set_property -name "top_auto_set" -value "0" -objects $obj

# Create 'constrs_1' fileset (if not found)
if {[string equal [get_filesets -quiet constrs_1] ""]} {
  create_fileset -constrset constrs_1
}

# Set 'constrs_1' fileset object
set obj [get_filesets constrs_1]

# Add/Import constrs file and set constrs file properties
set file "[file normalize "$origin_dir/msu.srcs/constrs_1/new/user.xdc"]"
set file_added [add_files -norecurse -fileset $obj [list $file]]
set file "new/user.xdc"
set file_obj [get_files -of_objects [get_filesets constrs_1] [list "*$file"]]
set_property -name "file_type" -value "XDC" -objects $file_obj

# Set 'constrs_1' fileset properties
set obj [get_filesets constrs_1]
set_property -name "target_constrs_file" -value "[get_files *new/user.xdc]" -objects $obj
set_property -name "target_part" -value "xcvu9p-flga2104-2L-e" -objects $obj
set_property -name "target_ucf" -value "[get_files *new/user.xdc]" -objects $obj

# Create 'sim_1' fileset (if not found)
if {[string equal [get_filesets -quiet sim_1] ""]} {
  create_fileset -simset sim_1
}

# Set 'sim_1' fileset object
set obj [get_filesets sim_1]
# Add local files from the original project (-no_copy_sources specified)
set files [list \
 [file normalize "${origin_dir}/msu.srcs/tb.sv" ]\
 [file normalize "${origin_dir}/tb_behav.wcfg" ]\
]
set added_files [add_files -fileset sim_1 $files]

# Set 'sim_1' fileset file properties for remote files
# None

# Set 'sim_1' fileset file properties for local files
set file "msu.srcs/tb.sv"
set file_obj [get_files -of_objects [get_filesets sim_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj


# Set 'sim_1' fileset properties
set obj [get_filesets sim_1]
set_property -name "top" -value "tb" -objects $obj
set_property -name "top_auto_set" -value "0" -objects $obj
set_property -name "top_lib" -value "xil_defaultlib" -objects $obj
set_property -name "verilog_define" -value "FASTSIM=1" -objects $obj
set_property -name "xsim.simulate.runtime" -value "100000ns" -objects $obj

# Set 'utils_1' fileset object
set obj [get_filesets utils_1]
# Empty (no sources present)

# Set 'utils_1' fileset properties
set obj [get_filesets utils_1]

# Create 'synth_1' run (if not found)
if {[string equal [get_runs -quiet synth_1] ""]} {
    create_run -name synth_1 -part xcvu9p-flga2104-2L-e -flow {Vivado Synthesis 2018} -strategy "Vivado Synthesis Defaults" -report_strategy {No Reports} -constrset constrs_1
} else {
  set_property strategy "Vivado Synthesis Defaults" [get_runs synth_1]
  set_property flow "Vivado Synthesis 2018" [get_runs synth_1]
}
set obj [get_runs synth_1]
set_property set_report_strategy_name 1 $obj
set_property report_strategy {Vivado Synthesis Default Reports} $obj
set_property set_report_strategy_name 0 $obj
# Create 'synth_1_synth_report_utilization_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs synth_1] synth_1_synth_report_utilization_0] "" ] } {
  create_report_config -report_name synth_1_synth_report_utilization_0 -report_type report_utilization:1.0 -steps synth_design -runs synth_1
}
set obj [get_report_configs -of_objects [get_runs synth_1] synth_1_synth_report_utilization_0]
if { $obj != "" } {
set_property -name "display_name" -value "synth_1_synth_report_utilization_0" -objects $obj

}
set obj [get_runs synth_1]
set_property -name "part" -value "xcvu9p-flga2104-2L-e" -objects $obj
set_property -name "strategy" -value "Vivado Synthesis Defaults" -objects $obj
set_property -name "steps.synth_design.args.more options" -value "-mode out_of_context" -objects $obj

# set the current synth run
current_run -synthesis [get_runs synth_1]

# Create 'impl_1' run (if not found)
if {[string equal [get_runs -quiet impl_1] ""]} {
    create_run -name impl_1 -part xcvu9p-flga2104-2L-e -flow {Vivado Implementation 2018} -strategy "Vivado Implementation Defaults" -report_strategy {No Reports} -constrset constrs_1 -parent_run synth_1
} else {
  set_property strategy "Vivado Implementation Defaults" [get_runs impl_1]
  set_property flow "Vivado Implementation 2018" [get_runs impl_1]
}
set obj [get_runs impl_1]
set_property set_report_strategy_name 1 $obj
set_property report_strategy {Vivado Implementation Default Reports} $obj
set_property set_report_strategy_name 0 $obj
# Create 'impl_1_init_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_init_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_init_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps init_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_init_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "display_name" -value "impl_1_init_report_timing_summary_0" -objects $obj

}
# Create 'impl_1_opt_report_drc_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_opt_report_drc_0] "" ] } {
  create_report_config -report_name impl_1_opt_report_drc_0 -report_type report_drc:1.0 -steps opt_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_opt_report_drc_0]
if { $obj != "" } {
set_property -name "display_name" -value "impl_1_opt_report_drc_0" -objects $obj

}
# Create 'impl_1_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps opt_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "display_name" -value "impl_1_opt_report_timing_summary_0" -objects $obj

}
# Create 'impl_1_power_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_power_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_power_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps power_opt_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_power_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "display_name" -value "impl_1_power_opt_report_timing_summary_0" -objects $obj

}
# Create 'impl_1_place_report_io_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_io_0] "" ] } {
  create_report_config -report_name impl_1_place_report_io_0 -report_type report_io:1.0 -steps place_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_io_0]
if { $obj != "" } {
set_property -name "display_name" -value "impl_1_place_report_io_0" -objects $obj

}
# Create 'impl_1_place_report_utilization_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_utilization_0] "" ] } {
  create_report_config -report_name impl_1_place_report_utilization_0 -report_type report_utilization:1.0 -steps place_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_utilization_0]
if { $obj != "" } {
set_property -name "display_name" -value "impl_1_place_report_utilization_0" -objects $obj

}
# Create 'impl_1_place_report_control_sets_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_control_sets_0] "" ] } {
  create_report_config -report_name impl_1_place_report_control_sets_0 -report_type report_control_sets:1.0 -steps place_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_control_sets_0]
if { $obj != "" } {
set_property -name "display_name" -value "impl_1_place_report_control_sets_0" -objects $obj

}
# Create 'impl_1_place_report_incremental_reuse_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_incremental_reuse_0] "" ] } {
  create_report_config -report_name impl_1_place_report_incremental_reuse_0 -report_type report_incremental_reuse:1.0 -steps place_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_incremental_reuse_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "display_name" -value "impl_1_place_report_incremental_reuse_0" -objects $obj

}
# Create 'impl_1_place_report_incremental_reuse_1' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_incremental_reuse_1] "" ] } {
  create_report_config -report_name impl_1_place_report_incremental_reuse_1 -report_type report_incremental_reuse:1.0 -steps place_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_incremental_reuse_1]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "display_name" -value "impl_1_place_report_incremental_reuse_1" -objects $obj

}
# Create 'impl_1_place_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_place_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps place_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "display_name" -value "impl_1_place_report_timing_summary_0" -objects $obj

}
# Create 'impl_1_post_place_power_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_post_place_power_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_post_place_power_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps post_place_power_opt_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_post_place_power_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "display_name" -value "impl_1_post_place_power_opt_report_timing_summary_0" -objects $obj

}
# Create 'impl_1_phys_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_phys_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_phys_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps phys_opt_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_phys_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "display_name" -value "impl_1_phys_opt_report_timing_summary_0" -objects $obj

}
# Create 'impl_1_route_report_drc_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_drc_0] "" ] } {
  create_report_config -report_name impl_1_route_report_drc_0 -report_type report_drc:1.0 -steps route_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_drc_0]
if { $obj != "" } {
set_property -name "display_name" -value "impl_1_route_report_drc_0" -objects $obj

}
# Create 'impl_1_route_report_methodology_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_methodology_0] "" ] } {
  create_report_config -report_name impl_1_route_report_methodology_0 -report_type report_methodology:1.0 -steps route_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_methodology_0]
if { $obj != "" } {
set_property -name "display_name" -value "impl_1_route_report_methodology_0" -objects $obj

}
# Create 'impl_1_route_report_power_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_power_0] "" ] } {
  create_report_config -report_name impl_1_route_report_power_0 -report_type report_power:1.0 -steps route_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_power_0]
if { $obj != "" } {
set_property -name "display_name" -value "impl_1_route_report_power_0" -objects $obj

}
# Create 'impl_1_route_report_route_status_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_route_status_0] "" ] } {
  create_report_config -report_name impl_1_route_report_route_status_0 -report_type report_route_status:1.0 -steps route_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_route_status_0]
if { $obj != "" } {
set_property -name "display_name" -value "impl_1_route_report_route_status_0" -objects $obj

}
# Create 'impl_1_route_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_route_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps route_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_timing_summary_0]
if { $obj != "" } {
set_property -name "display_name" -value "impl_1_route_report_timing_summary_0" -objects $obj

}
# Create 'impl_1_route_report_incremental_reuse_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_incremental_reuse_0] "" ] } {
  create_report_config -report_name impl_1_route_report_incremental_reuse_0 -report_type report_incremental_reuse:1.0 -steps route_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_incremental_reuse_0]
if { $obj != "" } {
set_property -name "display_name" -value "impl_1_route_report_incremental_reuse_0" -objects $obj

}
# Create 'impl_1_route_report_clock_utilization_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_clock_utilization_0] "" ] } {
  create_report_config -report_name impl_1_route_report_clock_utilization_0 -report_type report_clock_utilization:1.0 -steps route_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_clock_utilization_0]
if { $obj != "" } {
set_property -name "display_name" -value "impl_1_route_report_clock_utilization_0" -objects $obj

}
# Create 'impl_1_route_report_bus_skew_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_bus_skew_0] "" ] } {
  create_report_config -report_name impl_1_route_report_bus_skew_0 -report_type report_bus_skew:1.1 -steps route_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_bus_skew_0]
if { $obj != "" } {
set_property -name "display_name" -value "impl_1_route_report_bus_skew_0" -objects $obj

}
# Create 'impl_1_post_route_phys_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_post_route_phys_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_post_route_phys_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps post_route_phys_opt_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_post_route_phys_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "display_name" -value "impl_1_post_route_phys_opt_report_timing_summary_0" -objects $obj

}
# Create 'impl_1_post_route_phys_opt_report_bus_skew_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_post_route_phys_opt_report_bus_skew_0] "" ] } {
  create_report_config -report_name impl_1_post_route_phys_opt_report_bus_skew_0 -report_type report_bus_skew:1.1 -steps post_route_phys_opt_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_post_route_phys_opt_report_bus_skew_0]
if { $obj != "" } {
set_property -name "display_name" -value "impl_1_post_route_phys_opt_report_bus_skew_0" -objects $obj

}
set obj [get_runs impl_1]
set_property -name "part" -value "xcvu9p-flga2104-2L-e" -objects $obj
set_property -name "strategy" -value "Vivado Implementation Defaults" -objects $obj
set_property -name "steps.write_bitstream.args.readback_file" -value "0" -objects $obj
set_property -name "steps.write_bitstream.args.verbose" -value "0" -objects $obj

# set the current impl run
current_run -implementation [get_runs impl_1]

puts "INFO: Project created:${_xil_proj_name_}"
set obj [get_dashboards default_dashboard]

# Create 'drc_1' gadget (if not found)
if {[string equal [get_dashboard_gadgets -of_objects [get_dashboards default_dashboard] [ list "drc_1" ] ] ""]} {
create_dashboard_gadget -name {drc_1} -type drc
}
set obj [get_dashboard_gadgets -of_objects [get_dashboards default_dashboard] [ list "drc_1" ] ]
set_property -name "reports" -value "impl_1#impl_1_route_report_drc_0" -objects $obj

# Create 'methodology_1' gadget (if not found)
if {[string equal [get_dashboard_gadgets -of_objects [get_dashboards default_dashboard] [ list "methodology_1" ] ] ""]} {
create_dashboard_gadget -name {methodology_1} -type methodology
}
set obj [get_dashboard_gadgets -of_objects [get_dashboards default_dashboard] [ list "methodology_1" ] ]
set_property -name "reports" -value "impl_1#impl_1_route_report_methodology_0" -objects $obj

# Create 'power_1' gadget (if not found)
if {[string equal [get_dashboard_gadgets -of_objects [get_dashboards default_dashboard] [ list "power_1" ] ] ""]} {
create_dashboard_gadget -name {power_1} -type power
}
set obj [get_dashboard_gadgets -of_objects [get_dashboards default_dashboard] [ list "power_1" ] ]
set_property -name "reports" -value "impl_1#impl_1_route_report_power_0" -objects $obj

# Create 'timing_1' gadget (if not found)
if {[string equal [get_dashboard_gadgets -of_objects [get_dashboards default_dashboard] [ list "timing_1" ] ] ""]} {
create_dashboard_gadget -name {timing_1} -type timing
}
set obj [get_dashboard_gadgets -of_objects [get_dashboards default_dashboard] [ list "timing_1" ] ]
set_property -name "reports" -value "impl_1#impl_1_route_report_timing_summary_0" -objects $obj

# Create 'utilization_1' gadget (if not found)
if {[string equal [get_dashboard_gadgets -of_objects [get_dashboards default_dashboard] [ list "utilization_1" ] ] ""]} {
create_dashboard_gadget -name {utilization_1} -type utilization
}
set obj [get_dashboard_gadgets -of_objects [get_dashboards default_dashboard] [ list "utilization_1" ] ]
set_property -name "reports" -value "synth_1#synth_1_synth_report_utilization_0" -objects $obj
set_property -name "run.step" -value "synth_design" -objects $obj
set_property -name "run.type" -value "synthesis" -objects $obj

# Create 'utilization_2' gadget (if not found)
if {[string equal [get_dashboard_gadgets -of_objects [get_dashboards default_dashboard] [ list "utilization_2" ] ] ""]} {
create_dashboard_gadget -name {utilization_2} -type utilization
}
set obj [get_dashboard_gadgets -of_objects [get_dashboards default_dashboard] [ list "utilization_2" ] ]
set_property -name "reports" -value "impl_1#impl_1_place_report_utilization_0" -objects $obj

move_dashboard_gadget -name {utilization_1} -row 0 -col 0
move_dashboard_gadget -name {power_1} -row 1 -col 0
move_dashboard_gadget -name {drc_1} -row 2 -col 0
move_dashboard_gadget -name {timing_1} -row 0 -col 1
move_dashboard_gadget -name {utilization_2} -row 1 -col 1
move_dashboard_gadget -name {methodology_1} -row 2 -col 1
# Set current dashboard to 'default_dashboard'
current_dashboard default_dashboard
